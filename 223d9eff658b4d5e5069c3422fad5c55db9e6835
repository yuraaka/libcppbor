{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0b64146e_586b825e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2021-03-11T22:08:43Z",
      "side": 1,
      "message": "This looks pretty good, thanks Andrei. Couple of comments inline.\n\nSorry for the delay in reviewing this. Shawn - who wrote libcppbor - is out this week and next so either myself or Max will +2 this CL. I\u0027ve pinged Max and asked him to take a look as well.",
      "revId": "223d9eff658b4d5e5069c3422fad5c55db9e6835",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65fc21d2_4e4702fb",
        "filename": "include/cppbor/cppbor.h",
        "patchSetId": 8
      },
      "lineNbr": 420,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2021-03-11T22:08:43Z",
      "side": 1,
      "message": "Did you consider std::basic_string_view\u003cuint8_t\u003e instead?\n\nFWIW, I think std::string_view would work as long as an sizeof char is 1... which is a pretty safe assumption.",
      "range": {
        "startLine": 420,
        "startChar": 53,
        "endLine": 420,
        "endChar": 69
      },
      "revId": "223d9eff658b4d5e5069c3422fad5c55db9e6835",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25e9f605_79636c3e",
        "filename": "include/cppbor/cppbor.h",
        "patchSetId": 8
      },
      "lineNbr": 420,
      "author": {
        "id": 1638873
      },
      "writtenOn": "2021-03-11T22:41:37Z",
      "side": 1,
      "message": "Ideally this would be std::span\u003cuint8_t\u003e, but that is only available in C++20.\n\nI think std::basic_string_view\u003cuint8_t\u003e could work, but you lose some nice features like building a ViewBstr directly from a C string, e.g., ViewBstr(\"foo\"). You\u0027d have to build a uint8_t[] array and the pass that to the basic_string_view constructor along with the size.\n\nOn the other hand, regular Bstr can be constructed from a regular std::string because it has a separate Bstr constructor that takes a std::string. Maybe that would work for ViewBstr too. I\u0027ll give it a try.",
      "parentUuid": "65fc21d2_4e4702fb",
      "range": {
        "startLine": 420,
        "startChar": 53,
        "endLine": 420,
        "endChar": 69
      },
      "revId": "223d9eff658b4d5e5069c3422fad5c55db9e6835",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1309ceb5_055d12c2",
        "filename": "include/cppbor/cppbor.h",
        "patchSetId": 8
      },
      "lineNbr": 420,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2021-03-11T22:50:11Z",
      "side": 1,
      "message": "OK, I\u0027m a big fan of ergonomics so SGTM to just use std::string_view for now. We can always change it later!",
      "parentUuid": "25e9f605_79636c3e",
      "range": {
        "startLine": 420,
        "startChar": 53,
        "endLine": 420,
        "endChar": 69
      },
      "revId": "223d9eff658b4d5e5069c3422fad5c55db9e6835",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9317e56e_a1f084b9",
        "filename": "rules.mk",
        "patchSetId": 8
      },
      "lineNbr": 30,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2021-03-11T22:08:43Z",
      "side": 1,
      "message": "No need to add empty line here (bet it was inserted automatically by your text editor).",
      "revId": "223d9eff658b4d5e5069c3422fad5c55db9e6835",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b6ed880_77e7b518",
        "filename": "rules.mk",
        "patchSetId": 8
      },
      "lineNbr": 30,
      "author": {
        "id": 1000205
      },
      "writtenOn": "2021-03-11T22:32:18Z",
      "side": 1,
      "message": "There is no empty line here (see https://android.googlesource.com/platform/external/libcppbor/+/refs/changes/92/1588192/8/rules.mk). Gerrit seem to be showing it as an empty line since the original file was missing the line terminator. I agree that this file does not need to be touched as part of this change though.",
      "parentUuid": "9317e56e_a1f084b9",
      "revId": "223d9eff658b4d5e5069c3422fad5c55db9e6835",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac76b814_e9bae8e4",
        "filename": "rules.mk",
        "patchSetId": 8
      },
      "lineNbr": 30,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2021-03-11T22:38:36Z",
      "side": 1,
      "message": "I see, thanks.",
      "parentUuid": "4b6ed880_77e7b518",
      "revId": "223d9eff658b4d5e5069c3422fad5c55db9e6835",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df3e613b_29d41ecb",
        "filename": "rules.mk",
        "patchSetId": 8
      },
      "lineNbr": 30,
      "author": {
        "id": 1638873
      },
      "writtenOn": "2021-03-11T22:41:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9317e56e_a1f084b9",
      "revId": "223d9eff658b4d5e5069c3422fad5c55db9e6835",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}